// –î–∞–Ω—ñ –¥–ª—è —ñ–≥–æ—Ä - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑ application_data_json
const gameData = {
  flags: {
    beginner: [
      {"name": "–°–®–ê", "flag": "üá∫üá∏"}, {"name": "–í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è", "flag": "üá¨üáß"}, {"name": "–§—Ä–∞–Ω—Ü—ñ—è", "flag": "üá´üá∑"}, {"name": "–ù—ñ–º–µ—á—á–∏–Ω–∞", "flag": "üá©üá™"}, {"name": "–Ø–ø–æ–Ω—ñ—è", "flag": "üáØüáµ"}, {"name": "–ö–∏—Ç–∞–π", "flag": "üá®üá≥"}, {"name": "–†–æ—Å—ñ—è", "flag": "üá∑üá∫"}, {"name": "–ö–∞–Ω–∞–¥–∞", "flag": "üá®üá¶"}, {"name": "–ê–≤—Å—Ç—Ä–∞–ª—ñ—è", "flag": "üá¶üá∫"}, {"name": "–ë—Ä–∞–∑–∏–ª—ñ—è", "flag": "üáßüá∑"}, {"name": "–Ü–Ω–¥—ñ—è", "flag": "üáÆüá≥"}, {"name": "–Ü—Ç–∞–ª—ñ—è", "flag": "üáÆüáπ"}, {"name": "–Ü—Å–ø–∞–Ω—ñ—è", "flag": "üá™üá∏"}, {"name": "–ú–µ–∫—Å–∏–∫–∞", "flag": "üá≤üáΩ"}, {"name": "–ù—ñ–¥–µ—Ä–ª–∞–Ω–¥–∏", "flag": "üá≥üá±"}, {"name": "–®–≤–µ—Ü—ñ—è", "flag": "üá∏üá™"}, {"name": "–ù–æ—Ä–≤–µ–≥—ñ—è", "flag": "üá≥üá¥"}, {"name": "–®–≤–µ–π—Ü–∞—Ä—ñ—è", "flag": "üá®üá≠"}, {"name": "–ü–æ–ª—å—â–∞", "flag": "üáµüá±"}, {"name": "–£–∫—Ä–∞—ó–Ω–∞", "flag": "üá∫üá¶"}, {"name": "–¢—É—Ä–µ—á—á–∏–Ω–∞", "flag": "üáπüá∑"}, {"name": "–ü—ñ–≤–¥–µ–Ω–Ω–∞ –ö–æ—Ä–µ—è", "flag": "üá∞üá∑"}, {"name": "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞", "flag": "üá¶üá∑"}, {"name": "–Ñ–≥–∏–ø–µ—Ç", "flag": "üá™üá¨"}, {"name": "–Ü–∑—Ä–∞—ó–ª—å", "flag": "üáÆüá±"}, {"name": "–°–∞—É–¥—ñ–≤—Å—å–∫–∞ –ê—Ä–∞–≤—ñ—è", "flag": "üá∏üá¶"}, {"name": "–ü–ê–†", "flag": "üáøüá¶"}, {"name": "–ù—ñ–≥–µ—Ä—ñ—è", "flag": "üá≥üá¨"}, {"name": "–¢–∞—ó–ª–∞–Ω–¥", "flag": "üáπüá≠"}, {"name": "–ì—Ä–µ—Ü—ñ—è", "flag": "üá¨üá∑"}
    ],
    intermediate: [
      {"name": "–Ü–Ω–¥–æ–Ω–µ–∑—ñ—è", "flag": "üáÆüá©"}, {"name": "–ü–∞–∫–∏—Å—Ç–∞–Ω", "flag": "üáµüá∞"}, {"name": "–ë–∞–Ω–≥–ª–∞–¥–µ—à", "flag": "üáßüá©"}, {"name": "–í'—î—Ç–Ω–∞–º", "flag": "üáªüá≥"}, {"name": "–§—ñ–ª—ñ–ø–ø—ñ–Ω–∏", "flag": "üáµüá≠"}, {"name": "–Ü—Ä–∞–Ω", "flag": "üáÆüá∑"}, {"name": "–Ü—Ä–∞–∫", "flag": "üáÆüá∂"}, {"name": "–ê—Ñ–≥–∞–Ω—ñ—Å—Ç–∞–Ω", "flag": "üá¶üá´"}, {"name": "–ú–∞–ª–∞–π–∑—ñ—è", "flag": "üá≤üáæ"}, {"name": "–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω", "flag": "üá∫üáø"}, {"name": "–°–∞—É–¥—ñ–≤—Å—å–∫–∞ –ê—Ä–∞–≤—ñ—è", "flag": "üá∏üá¶"}, {"name": "–ô—î–º–µ–Ω", "flag": "üáæüá™"}, {"name": "–ù–µ–ø–∞–ª", "flag": "üá≥üáµ"}, {"name": "–®—Ä—ñ-–õ–∞–Ω–∫–∞", "flag": "üá±üá∞"}, {"name": "–ú'—è–Ω–º–∞", "flag": "üá≤üá≤"}, {"name": "–ö–∞–º–±–æ–¥–∂–∞", "flag": "üá∞üá≠"}, {"name": "–õ–∞–æ—Å", "flag": "üá±üá¶"}, {"name": "–ú–æ–Ω–≥–æ–ª—ñ—è", "flag": "üá≤üá≥"}, {"name": "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "flag": "üá∞üáø"}, {"name": "–ö–∏—Ä–≥–∏–∑—Å—Ç–∞–Ω", "flag": "üá∞üá¨"}
    ],
    expert_pairs: [
      {
        "target": "üáπüá©",
        "targetName": "–ß–∞–¥",
        "options": ["üáπüá©", "üá∑üá¥", "üá≤üá©", "üá¶üá©"],
        "optionNames": ["–ß–∞–¥", "–†—É–º—É–Ω—ñ—è", "–ú–æ–ª–¥–æ–≤–∞", "–ê–Ω–¥–æ—Ä—Ä–∞"]
      },
      {
        "target": "üáÆüá©",
        "targetName": "–Ü–Ω–¥–æ–Ω–µ–∑—ñ—è",
        "options": ["üáÆüá©", "üá≤üá®", "üáµüá±", "üá≤üáπ"],
        "optionNames": ["–Ü–Ω–¥–æ–Ω–µ–∑—ñ—è", "–ú–æ–Ω–∞–∫–æ", "–ü–æ–ª—å—â–∞", "–ú–∞–ª—å—Ç–∞"]
      },
      {
        "target": "üá≥üáø",
        "targetName": "–ù–æ–≤–∞ –ó–µ–ª–∞–Ω–¥—ñ—è",
        "options": ["üá≥üáø", "üá¶üá∫", "üá´üáØ", "üá®üá∞"],
        "optionNames": ["–ù–æ–≤–∞ –ó–µ–ª–∞–Ω–¥—ñ—è", "–ê–≤—Å—Ç—Ä–∞–ª—ñ—è", "–§—ñ–¥–∂—ñ", "–û—Å—Ç—Ä–æ–≤–∏ –ö—É–∫–∞"]
      },
      {
        "target": "üá≥üá±",
        "targetName": "–ù—ñ–¥–µ—Ä–ª–∞–Ω–¥–∏",
        "options": ["üá≥üá±", "üá±üá∫", "üá´üá∑", "üá∑üá∫"],
        "optionNames": ["–ù—ñ–¥–µ—Ä–ª–∞–Ω–¥–∏", "–õ—é–∫—Å–µ–º–±—É—Ä–≥", "–§—Ä–∞–Ω—Ü—ñ—è", "–†–æ—Å—ñ—è"]
      },
      {
        "target": "üá∏üá≥",
        "targetName": "–°–µ–Ω–µ–≥–∞–ª",
        "options": ["üá∏üá≥", "üá≤üá±", "üá¨üá≥", "üá®üá≤"],
        "optionNames": ["–°–µ–Ω–µ–≥–∞–ª", "–ú–∞–ª—ñ", "–ì–≤—ñ–Ω–µ—è", "–ö–∞–º–µ—Ä—É–Ω"]
      }
    ]
  },
  math_problems: {
    beginner: {"operations": ["+", "-"], "range": [0, 100], "small_operand": 10, "no_negative": true},
    intermediate: {"operations": ["+", "-"], "range": [0, 1000], "small_operand": 100, "no_negative": true},
    advanced: {"operations": ["+", "-"], "range": [-500, 1000], "small_operand": 100, "no_negative": false},
    expert: {"operations": ["+", "-", "√ó", "√∑"], "range": [0, 100], "small_operand": 50, "no_negative": false, "integers_only": true}
  }
};

// –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–±–æ—Ä–∏ –ø—Ä–∞–ø–æ—Ä—ñ–≤ –¥–ª—è –ø—Ä–æ—Å—É–Ω—É—Ç–æ–≥–æ —Ä—ñ–≤–Ω—è
const advancedFlags = [...gameData.flags.beginner, ...gameData.flags.intermediate];

// –°—Ç–∞–Ω –≥—Ä–∏
let gameState = {
  currentScreen: 'main-menu',
  flagsScore: 0,
  mathScore: 0,
  currentGameType: null,
  currentDifficulty: null,
  currentQuestion: null,
  currentAnswer: null,
  options: []
};

// DOM –ï–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –µ–∫—Ä–∞–Ω–∞–º–∏
let screens;
let mainMenu;
let flagsDifficulty;
let mathDifficulty;
let flagsGame;
let mathGame;
let answerFeedback;

// –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
document.addEventListener('DOMContentLoaded', () => {
  console.log('DOM –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
  
  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
  initializeElements();
  
  // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
  setupEventListeners();
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –µ–∫—Ä–∞–Ω
  navigateToScreen('main-menu');
  
  console.log('–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ DOM
function initializeElements() {
  console.log('–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤');
  
  screens = {
    'main-menu': document.getElementById('main-menu'),
    'flags-difficulty': document.getElementById('flags-difficulty'),
    'math-difficulty': document.getElementById('math-difficulty'),
    'flags-game': document.getElementById('flags-game'),
    'math-game': document.getElementById('math-game')
  };
  
  mainMenu = document.getElementById('main-menu');
  flagsDifficulty = document.getElementById('flags-difficulty');
  mathDifficulty = document.getElementById('math-difficulty');
  flagsGame = document.getElementById('flags-game');
  mathGame = document.getElementById('math-game');
  answerFeedback = document.getElementById('answer-feedback');
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–ª—è –≤—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫
function setupEventListeners() {
  console.log('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π');
  
  // –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é - –∫–Ω–æ–ø–∫–∏ –≤–∏–±–æ—Ä—É –≥—Ä–∏
  const flagsBtn = document.getElementById('flags-btn');
  const mathBtn = document.getElementById('math-btn');
  
  addButtonClickListener(flagsBtn, () => {
    console.log('–ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–∞–ø–æ—Ä–∏"');
    navigateToScreen('flags-difficulty');
  });
  
  addButtonClickListener(mathBtn, () => {
    console.log('–ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"');
    navigateToScreen('math-difficulty');
  });
  
  // –ï–∫—Ä–∞–Ω —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ –ø—Ä–∞–ø–æ—Ä—ñ–≤ - –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ —Ç–∞ —Ä—ñ–≤–Ω—ñ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ
  const backToMainFromFlags = document.getElementById('back-to-main-from-flags');
  addButtonClickListener(backToMainFromFlags, () => {
    console.log('–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –≤–∏–±–æ—Ä—É —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ –ø—Ä–∞–ø–æ—Ä—ñ–≤');
    navigateToScreen('main-menu');
  });
  
  const flagsBeginner = document.getElementById('flags-beginner');
  const flagsIntermediate = document.getElementById('flags-intermediate');
  const flagsAdvanced = document.getElementById('flags-advanced');
  const flagsExpert = document.getElementById('flags-expert');
  
  addButtonClickListener(flagsBeginner, () => startFlagsGame('beginner'));
  addButtonClickListener(flagsIntermediate, () => startFlagsGame('intermediate'));
  addButtonClickListener(flagsAdvanced, () => startFlagsGame('advanced'));
  addButtonClickListener(flagsExpert, () => startFlagsGame('expert'));
  
  // –ï–∫—Ä–∞–Ω —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ - –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ —Ç–∞ —Ä—ñ–≤–Ω—ñ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ
  const backToMainFromMath = document.getElementById('back-to-main-from-math');
  addButtonClickListener(backToMainFromMath, () => {
    console.log('–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –≤–∏–±–æ—Ä—É —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏');
    navigateToScreen('main-menu');
  });
  
  const mathBeginner = document.getElementById('math-beginner');
  const mathIntermediate = document.getElementById('math-intermediate');
  const mathAdvanced = document.getElementById('math-advanced');
  const mathExpert = document.getElementById('math-expert');
  
  addButtonClickListener(mathBeginner, () => startMathGame('beginner'));
  addButtonClickListener(mathIntermediate, () => startMathGame('intermediate'));
  addButtonClickListener(mathAdvanced, () => startMathGame('advanced'));
  addButtonClickListener(mathExpert, () => startMathGame('expert'));
  
  // –Ü–≥—Ä–æ–≤–∏–π –µ–∫—Ä–∞–Ω –ø—Ä–∞–ø–æ—Ä—ñ–≤ - –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  const backToFlagsDifficulty = document.getElementById('back-to-flags-difficulty');
  const flagsToMain = document.getElementById('flags-to-main');
  
  addButtonClickListener(backToFlagsDifficulty, () => {
    console.log('–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≤–∏–±–æ—Ä—É —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ –ø—Ä–∞–ø–æ—Ä—ñ–≤');
    navigateToScreen('flags-difficulty');
  });
  
  addButtonClickListener(flagsToMain, () => {
    console.log('–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –≥—Ä–∏ –ø—Ä–∞–ø–æ—Ä—ñ–≤');
    navigateToScreen('main-menu');
  });
  
  // –Ü–≥—Ä–æ–≤–∏–π –µ–∫—Ä–∞–Ω –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ - –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
  const backToMathDifficulty = document.getElementById('back-to-math-difficulty');
  const mathToMain = document.getElementById('math-to-main');
  
  addButtonClickListener(backToMathDifficulty, () => {
    console.log('–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≤–∏–±–æ—Ä—É —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏');
    navigateToScreen('math-difficulty');
  });
  
  addButtonClickListener(mathToMain, () => {
    console.log('–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑ –≥—Ä–∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏');
    navigateToScreen('main-menu');
  });
}

// –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –∫–ª—ñ–∫—É –∑ –≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É–≤–∞–Ω–Ω—è–º
function addButtonClickListener(button, callback) {
  if (!button) {
    console.error('–ï–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ', button);
    return;
  }
  
  button.addEventListener('click', (event) => {
    console.log(`–ö–ª—ñ–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É ${button.id || '–±–µ–∑ id'}`);
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–∑—É–∞–ª—å–Ω–∏–π —Ñ—ñ–¥–±–µ–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏
    const rect = button.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;
    
    // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
    button.classList.add('btn-clicked');
    
    // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é-–∫–æ–ª–±–µ–∫ –ø—ñ—Å–ª—è –∫–æ—Ä–æ—Ç–∫–æ—ó –∑–∞—Ç—Ä–∏–º–∫–∏ (–∑–º–µ–Ω—à–µ–Ω–æ –¥–æ 150ms)
    setTimeout(() => {
      button.classList.remove('btn-clicked');
      callback();
    }, 150);
  });
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –º—ñ–∂ –µ–∫—Ä–∞–Ω–∞–º–∏
function navigateToScreen(screenId) {
  console.log(`–ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –µ–∫—Ä–∞–Ω—É: ${screenId}`);
  
  // –•–æ–≤–∞—î–º–æ –≤—Å—ñ –µ–∫—Ä–∞–Ω–∏
  Object.values(screens).forEach(screen => {
    screen.classList.remove('active');
  });
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –µ–∫—Ä–∞–Ω
  if (screens[screenId]) {
    screens[screenId].classList.add('active');
    gameState.currentScreen = screenId;
    
    // –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ—è–≤–∏ –µ–∫—Ä–∞–Ω—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é requestAnimationFrame
    requestAnimationFrame(() => {
      screens[screenId].style.animation = 'none';
      screens[screenId].offsetHeight; // –§–æ—Ä—Å—É—î–º–æ –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É–≤–∞–Ω–Ω—è
      screens[screenId].style.animation = 'fadeIn 0.3s ease-in-out';
    });
  } else {
    console.error(`–ï–∫—Ä–∞–Ω ${screenId} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –≥—Ä–∏ –∑ –ø—Ä–∞–ø–æ—Ä–∞–º–∏
function startFlagsGame(difficulty) {
  console.log(`–ó–∞–ø—É—Å–∫ –≥—Ä–∏ –∑ –ø—Ä–∞–ø–æ—Ä–∞–º–∏, —Ä—ñ–≤–µ–Ω—å: ${difficulty}`);
  
  gameState.currentGameType = 'flags';
  gameState.currentDifficulty = difficulty;
  gameState.flagsScore = 0;
  
  // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É
  document.getElementById('flags-score').textContent = '0';
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ —ñ–≥—Ä–æ–≤–æ–≥–æ –µ–∫—Ä–∞–Ω—É
  navigateToScreen('flags-game');
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–µ—Ä—à–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
  generateFlagQuestion();
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –≥—Ä–∏ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–æ—é
function startMathGame(difficulty) {
  console.log(`–ó–∞–ø—É—Å–∫ –≥—Ä–∏ –∑ –º–∞—Ç–µ–º–∞—Ç–∏–∫–æ—é, —Ä—ñ–≤–µ–Ω—å: ${difficulty}`);
  
  gameState.currentGameType = 'math';
  gameState.currentDifficulty = difficulty;
  gameState.mathScore = 0;
  
  // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É
  document.getElementById('math-score').textContent = '0';
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ —ñ–≥—Ä–æ–≤–æ–≥–æ –µ–∫—Ä–∞–Ω—É
  navigateToScreen('math-game');
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–µ—Ä—à–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
  generateMathQuestion();
}

// –ù–û–í–ê –§–£–ù–ö–¶–Ü–Ø: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∑ –ø—Ä–∞–ø–æ—Ä–æ–º - –º–µ—Ö–∞–Ω—ñ–∫–∞ "–Ω–∞–∑–≤–∞ ‚Üí –ø—Ä–∞–ø–æ—Ä"
function generateFlagQuestion() {
  console.log('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∑ –ø—Ä–∞–ø–æ—Ä–æ–º, —Ä—ñ–≤–µ–Ω—å:', gameState.currentDifficulty);
  
  let flagsData;
  let correctCountry;
  
  if (gameState.currentDifficulty === 'expert') {
    // –î–ª—è –µ–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—Ö–æ–∂—ñ –ø—Ä–∞–ø–æ—Ä–∏
    console.log('–ì–µ–Ω–µ—Ä—É—î–º–æ –µ–∫—Å–ø–µ—Ä—Ç–Ω–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∑—ñ —Å—Ö–æ–∂–∏–º–∏ –ø—Ä–∞–ø–æ—Ä–∞–º–∏');
    
    const randomIndex = Math.floor(Math.random() * gameData.flags.expert_pairs.length);
    const questionData = gameData.flags.expert_pairs[randomIndex];
    
    console.log('–û–±—Ä–∞–Ω–∞ –ø–∞—Ä–∞:', questionData);
    
    gameState.currentQuestion = questionData.targetName;
    gameState.currentAnswer = questionData.target;
    
    // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ù–ê–ó–í–£ –∫—Ä–∞—ó–Ω–∏
    document.getElementById('country-name').textContent = questionData.targetName;
    console.log('–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞–∑–≤—É –∫—Ä–∞—ó–Ω–∏:', questionData.targetName);
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –∑ –ü–†–ê–ü–û–†–ê–ú–ò —è–∫ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
    const optionsContainer = document.getElementById('flag-options');
    optionsContainer.innerHTML = '';
    
    // –ó–º—ñ—à—É—î–º–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –ø—Ä–∞–ø–æ—Ä—ñ–≤
    const shuffledOptions = [...questionData.options].sort(() => Math.random() - 0.5);
    console.log('–ó–º—ñ—à–∞–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –ø—Ä–∞–ø–æ—Ä—ñ–≤:', shuffledOptions);
    
    shuffledOptions.forEach((flag) => {
      const button = document.createElement('button');
      button.className = 'btn option-btn';
      button.textContent = flag; // –ü–†–ê–ü–û–† —è–∫ –∫–æ–Ω—Ç–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏
      
      addButtonClickListener(button, () => {
        checkFlagAnswer(flag);
      });
      
      optionsContainer.appendChild(button);
    });
    
    console.log('–°—Ç–≤–æ—Ä–µ–Ω–æ', shuffledOptions.length, '–∫–Ω–æ–ø–æ–∫ –∑ –ø—Ä–∞–ø–æ—Ä–∞–º–∏');
    
  } else {
    // –î–ª—è —ñ–Ω—à–∏—Ö —Ä—ñ–≤–Ω—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–≤–∏—á–∞–π–Ω—ñ –Ω–∞–±–æ—Ä–∏ –ø—Ä–∞–ø–æ—Ä—ñ–≤
    console.log('–ì–µ–Ω–µ—Ä—É—î–º–æ –∑–≤–∏—á–∞–π–Ω–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∑ –ø—Ä–∞–ø–æ—Ä–∞–º–∏');
    
    if (gameState.currentDifficulty === 'beginner') {
      flagsData = [...gameData.flags.beginner];
    } else if (gameState.currentDifficulty === 'intermediate') {
      flagsData = [...gameData.flags.intermediate];
    } else if (gameState.currentDifficulty === 'advanced') {
      flagsData = [...advancedFlags];
    }
    
    // –í–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—É –∫—Ä–∞—ó–Ω—É –¥–ª—è –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
    const randomIndex = Math.floor(Math.random() * flagsData.length);
    correctCountry = flagsData[randomIndex];
    
    gameState.currentQuestion = correctCountry.name;
    gameState.currentAnswer = correctCountry.flag;
    
    // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ù–ê–ó–í–£ –∫—Ä–∞—ó–Ω–∏
    document.getElementById('country-name').textContent = correctCountry.name;
    console.log('–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞–∑–≤—É –∫—Ä–∞—ó–Ω–∏:', correctCountry.name);
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π (3 –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –ø—Ä–∞–ø–æ—Ä–∏ + 1 –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π)
    const wrongOptions = flagsData
      .filter(country => country.flag !== correctCountry.flag)
      .sort(() => Math.random() - 0.5)
      .slice(0, 3);
    
    const allOptions = [...wrongOptions, correctCountry].sort(() => Math.random() - 0.5);
    gameState.options = allOptions;
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –∑ –ü–†–ê–ü–û–†–ê–ú–ò —è–∫ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
    const optionsContainer = document.getElementById('flag-options');
    optionsContainer.innerHTML = '';
    
    allOptions.forEach(country => {
      const button = document.createElement('button');
      button.className = 'btn option-btn';
      button.textContent = country.flag; // –ü–†–ê–ü–û–† —è–∫ –∫–æ–Ω—Ç–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏
      
      addButtonClickListener(button, () => {
        checkFlagAnswer(country.flag);
      });
      
      optionsContainer.appendChild(button);
    });
    
    console.log('–°—Ç–≤–æ—Ä–µ–Ω–æ', allOptions.length, '–∫–Ω–æ–ø–æ–∫ –∑ –ø—Ä–∞–ø–æ—Ä–∞–º–∏');
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
function generateMathQuestion() {
  console.log('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è');
  
  const settings = gameData.math_problems[gameState.currentDifficulty];
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –æ–ø–µ—Ä–∞—Ü—ñ—é
  const operation = settings.operations[Math.floor(Math.random() * settings.operations.length)];
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –æ–ø–µ—Ä–∞–Ω–¥–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ
  let num1, num2, answer;
  
  do {
    if (operation === '+' || operation === '-') {
      // –î–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è
      num1 = Math.floor(Math.random() * (settings.range[1] - settings.range[0])) + settings.range[0];
      num2 = Math.floor(Math.random() * settings.small_operand) + 1;
      
      if (operation === '+') {
        answer = num1 + num2;
      } else {
        // –î–ª—è –≤—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è –º—ñ–Ω—è—î–º–æ –º—ñ—Å—Ü—è–º–∏, —è–∫—â–æ –º–æ–∂–µ –≤–∏–π—Ç–∏ –≤—ñ–¥'—î–º–Ω–µ —á–∏—Å–ª–æ —ñ —Ü–µ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ
        if (settings.no_negative && num1 < num2) {
          [num1, num2] = [num2, num1];
        }
        answer = num1 - num2;
      }
    } else if (operation === '√ó') {
      // –î–ª—è –º–Ω–æ–∂–µ–Ω–Ω—è
      num1 = Math.floor(Math.random() * Math.min(20, settings.small_operand)) + 1;
      num2 = Math.floor(Math.random() * (settings.range[1] / num1)) + 1;
      answer = num1 * num2;
    } else if (operation === '√∑') {
      // –î–ª—è –¥—ñ–ª–µ–Ω–Ω—è (–∑–∞–±–µ–∑–ø–µ—á—É—î–º–æ —Ü—ñ–ª–æ—á–∏—Å–µ–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å)
      num2 = Math.floor(Math.random() * 10) + 1;
      answer = Math.floor(Math.random() * (settings.range[1] / num2)) + 1;
      num1 = answer * num2;
    }
  } while (
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–±–º–µ–∂–µ–Ω–Ω—è
    (settings.no_negative && answer < 0) || 
    (answer > settings.range[1]) ||
    (answer < settings.range[0])
  );
  
  // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
  gameState.currentQuestion = `${num1} ${operation} ${num2}`;
  gameState.currentAnswer = answer;
  
  // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
  document.getElementById('math-question').textContent = `${num1} ${operation} ${num2} = ?`;
  
  // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π (3 –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö + 1 –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π)
  const correctAnswer = answer;
  let wrongAnswers = [];
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±–ª–∏–∑—å–∫—ñ –¥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó
  for (let i = 0; i < 3; i++) {
    let wrongAnswer;
    do {
      // –ì–µ–Ω–µ—Ä—É—î–º–æ —á–∏—Å–ª–æ –≤ –º–µ–∂–∞—Ö ¬±20% –≤—ñ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, –∞–ª–µ –Ω–µ –º–µ–Ω—à–µ ¬±1
      const deviation = Math.max(1, Math.abs(Math.floor(correctAnswer * 0.2)));
      const randomOffset = Math.floor(Math.random() * (deviation * 2 + 1)) - deviation;
      wrongAnswer = correctAnswer + randomOffset;
      
      // –ó–∞–±–µ–∑–ø–µ—á—É—î–º–æ, —â–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó —Ç–∞ —ñ–Ω—à–∏—Ö –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö
    } while (
      wrongAnswer === correctAnswer || 
      wrongAnswers.includes(wrongAnswer) ||
      wrongAnswer < settings.range[0] ||
      wrongAnswer > settings.range[1]
    );
    
    wrongAnswers.push(wrongAnswer);
  }
  
  // –û–±'—î–¥–Ω—É—î–º–æ –≤—Å—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ —Ç–∞ –ø–µ—Ä–µ–º—ñ—à—É—î–º–æ
  const allOptions = [...wrongAnswers, correctAnswer].sort(() => Math.random() - 0.5);
  gameState.options = allOptions;
  
  // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏ –∑ –≤–∞—Ä—ñ–∞–Ω—Ç–∞–º–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
  const optionsContainer = document.getElementById('math-options');
  optionsContainer.innerHTML = '';
  
  allOptions.forEach(option => {
    const button = document.createElement('button');
    button.className = 'btn option-btn';
    button.textContent = option;
    
    addButtonClickListener(button, () => {
      checkMathAnswer(option);
    });
    
    optionsContainer.appendChild(button);
  });
}

// –ù–û–í–ê –§–£–ù–ö–¶–Ü–Ø: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∑ –ø—Ä–∞–ø–æ—Ä–æ–º - —Ç–µ–ø–µ—Ä –ø–æ—Ä—ñ–≤–Ω—é—î–º–æ –ø—Ä–∞–ø–æ—Ä–∏
function checkFlagAnswer(selectedFlag) {
  console.log(`–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∑ –ø—Ä–∞–ø–æ—Ä–æ–º: ${selectedFlag}, –ø—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: ${gameState.currentAnswer}`);
  
  const isCorrect = selectedFlag === gameState.currentAnswer;
  
  // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫
  showFeedback(isCorrect);
  
  // –í–∏–¥—ñ–ª—è—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—É —Ç–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  const optionButtons = document.querySelectorAll('#flag-options .option-btn');
  
  optionButtons.forEach(button => {
    if (button.textContent === gameState.currentAnswer) {
      button.classList.add('correct');
    } else if (button.textContent === selectedFlag && !isCorrect) {
      button.classList.add('incorrect');
    }
    
    // –í–∏–º–∏–∫–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–π —á–∞—Å
    button.disabled = true;
  });
  
  // –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–∞–≤–∏–ª—å–Ω–∞, –∑–±—ñ–ª—å—à—É—î–º–æ —Ä–∞—Ö—É–Ω–æ–∫
  if (isCorrect) {
    gameState.flagsScore++;
    document.getElementById('flags-score').textContent = gameState.flagsScore;
  }
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –ö–û–†–û–¢–®–ò–ô —á–∞—Å (300ms –∑–∞–º—ñ—Å—Ç—å 1500ms)
  setTimeout(() => {
    optionButtons.forEach(button => {
      button.disabled = false;
      button.classList.remove('correct', 'incorrect');
    });
    
    generateFlagQuestion();
  }, 300);
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è
function checkMathAnswer(selectedAnswer) {
  console.log(`–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è: ${selectedAnswer}`);
  
  const isCorrect = selectedAnswer === gameState.currentAnswer;
  
  // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫
  showFeedback(isCorrect);
  
  // –í–∏–¥—ñ–ª—è—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—É —Ç–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  const optionButtons = document.querySelectorAll('#math-options .option-btn');
  
  optionButtons.forEach(button => {
    const buttonValue = parseInt(button.textContent);
    
    if (buttonValue === gameState.currentAnswer) {
      button.classList.add('correct');
    } else if (buttonValue === selectedAnswer && !isCorrect) {
      button.classList.add('incorrect');
    }
    
    // –í–∏–º–∏–∫–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–π —á–∞—Å
    button.disabled = true;
  });
  
  // –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–∞–≤–∏–ª—å–Ω–∞, –∑–±—ñ–ª—å—à—É—î–º–æ —Ä–∞—Ö—É–Ω–æ–∫
  if (isCorrect) {
    gameState.mathScore++;
    document.getElementById('math-score').textContent = gameState.mathScore;
  }
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –ö–û–†–û–¢–®–ò–ô —á–∞—Å (300ms –∑–∞–º—ñ—Å—Ç—å 1500ms)
  setTimeout(() => {
    optionButtons.forEach(button => {
      button.disabled = false;
      button.classList.remove('correct', 'incorrect');
    });
    
    generateMathQuestion();
  }, 300);
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É
function showFeedback(isCorrect) {
  console.log(`–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –∑–≤'—è–∑–∫—É: ${isCorrect ? '–ø—Ä–∞–≤–∏–ª—å–Ω–æ' : '–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ'}`);
  
  // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–ª–∞—Å —Ç–∞ —Ç–µ–∫—Å—Ç –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
  answerFeedback.className = isCorrect ? 'feedback correct' : 'feedback incorrect';
  document.getElementById('feedback-text').textContent = isCorrect ? '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üëç' : '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! üëé';
  
  // –ü–æ–∫–∞–∑—É—î–º–æ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫
  answerFeedback.classList.remove('hidden');
  
  // –•–æ–≤–∞—î–º–æ –∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫ —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–∏–π —á–∞—Å
  setTimeout(() => {
    answerFeedback.classList.add('hidden');
  }, 1000);
}